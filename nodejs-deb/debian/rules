#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/upstream-tarball.mk
include /usr/share/cdbs/1/rules/utils.mk
include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk

DEB_UPSTREAM_URL = http://nodejs.org/dist/v$(DEB_UPSTREAM_TARBALL_VERSION)
DEB_UPSTREAM_TARBALL_BASENAME = node-v$(DEB_UPSTREAM_TARBALL_VERSION)

# ./deps/npm contains some non-DFSG files, repackaging is needed.
# Conveniently, remove unused software to ease debian/copyright maintenance.
DEB_UPSTREAM_REPACKAGE_EXCLUDES += \
./doc/sh_javascript.min.js \
./deps/openssl/ \
./deps/zlib/ \
./test/gc/node_modules/ \
./tools/blog/ \
./tools/closure_linter/ \
./tools/msvs/genfiles/ \
./tools/wrk/

DEB_UPSTREAM_REPACKAGE_TAG := $(shell echo $(DEB_UPSTREAM_VERSION) | egrep -o "dfsg[0-9]*")

# recent OpenSSL needed because... FIXME (git commit c232e17)
ssl-minver = 1.0.0g

# Needed by upstream build
#  * recent gyp needed to build using flock
bdeps = binutils, openssl (>= $(ssl-minver)), pkg-config
bdeps +=, bash-completion, curl, procps, zlib1g-dev
bdeps +=, libkvm-dev [kfreebsd-any]

# Needed by upstream build and binary development package
deps = python, libssl-dev (>= $(ssl-minver))

CDBS_BUILD_DEPENDS +=, $(bdeps), $(deps)
CDBS_DEPENDS_nodejs-dev = $(deps)

# suppress checking binary files, to not upset dpkg-source
DEB_COPYRIGHT_CHECK_IGNORE_REGEX = ^(doc/trademark-policy\.pdf|doc/mac_osx_nodejs_installer_logo\.png|doc/.*-white-stripe\.jpg|favicon\.ico|deps/v8/benchmarks/v8-logo\.png|test/fixtures/person\.jpg.*|src/res/node\.ico|debian/(changelog|copyright(|_hints|_newhints)))$

DEB_CONFIGURE_NORMAL_ARGS =
DEB_CONFIGURE_EXTRA_FLAGS = --without-snapshot --shared-openssl --shared-zlib --prefix=/usr

DEB_DESTDIR = $(CURDIR)/debian/tmp
DEB_MAKE_CLEAN_TARGET = clean

ifeq ($(DEB_HOST_ARCH_OS), kfreebsd)
DEB_CONFIGURE_EXTRA_FLAGS += --dest-os=kfreebsd
endif

# hardening gyp
CXXFLAGS+=$(CPPFLAGS)
export CXXFLAGS
export LDFLAGS

# properly clean files from build, test, python
clean::
	rm -f config.gypi
	rm -f config.mk
	rm -f test/fixtures/hello.txt
	rm -rf test/tmp
	find . -name "*.pyc" -delete
	rm -rf out

binary-post-install/nodejs::
	mv debian/nodejs/usr/bin/node debian/nodejs/usr/bin/nodejs
	mv debian/nodejs/usr/share/man/man1/node.1 debian/nodejs/usr/share/man/man1/nodejs.1

# remove *.json files from documentation
# remove all <script> tags from html files, js files are not installed anyway
# TODO: when doc will be generated from markdown, patch doc/template.html instead
binary-install/nodejs::
	find debian/nodejs/usr/share/doc/nodejs -name *.json -delete
	sed -i -n '1h; 1!H; $${g; s/<script[^><]*>[^><]*<.script[^><]*>//g; p;}' debian/nodejs/usr/share/doc/nodejs/api/*.html
